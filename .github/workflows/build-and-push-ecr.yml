name: Reusable Docker Production Build / Push (AWS ECR)

on:
  workflow_call:
    inputs:
      app_directory:
        description: "Relative path to the application directory"
        required: true
        type: string
      app_name:
        description: "Application name"
        required: true
        type: string
      aws_account_id:
        description: "AWS Account ID"
        required: true
        type: string
      aws_region:
        description: "AWS Region where ECR is located"
        required: true
        type: string
      ecr_repository:
        description: "Name of the ECR repository"
        required: true
        type: string
      image_tag:
        description: "Docker image tag (e.g., v1.2.3)"
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build and Push Image to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/GithubActionsECRPushRole
          aws-region: ${{ inputs.aws_region }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        working-directory: ${{ inputs.app_directory }}/${{ inputs.app_name }}
        run: |
          docker buildx build \
            --platform=linux/amd64 \
            --build-arg APP_ENV=production \
            -t ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.ecr_repository }}:${{ inputs.image_tag }} \
            .

      - name: Push image
        run: |
          docker push ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.ecr_repository }}:${{ inputs.image_tag }}
